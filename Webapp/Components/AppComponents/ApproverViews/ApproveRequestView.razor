@page "/approve/{RequestId}"
@using Domain.PurchaseRequests
@using Domain.PurchaseRequests.Model
@using Infrastructure.Services
@using MongoDB.Bson
<AuthorizeView Roles="Admin,Approver,Requester">
    <Authorized>
        @if (this._purchaseRequest == null) {
        <RadzenText Text="Loading Purchase Request....."/>
        } else {
        <ApproveView PurchaseRequest="@this._purchaseRequest"/>
        }
    </Authorized>
    <NotAuthorized>
        <RadzenButton Text="Login" Click="@this.LoginHandler" />
    </NotAuthorized>
</AuthorizeView>


@code {
    [Inject] private DialogService _dialogService { get; set; }
    [Inject] private PurchaseRequestService _purchaseRequestService { get; set; }
    [Inject] private NavigationManager Navigation { get; set; }
    
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }
    
    [Parameter] public string? RequestId { get; set; }
    private PurchaseRequest? _purchaseRequest;
    
    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        if (this.RequestId != null) {
            if(ObjectId.TryParse(this.RequestId, out ObjectId id)) {
                this._purchaseRequest = await this._purchaseRequestService.GetPurchaseRequest(id);
            }
        }
    }

    private Task LoginHandler() {
        return Task.CompletedTask;
    }
}