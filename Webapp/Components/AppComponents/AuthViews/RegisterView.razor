@using System.Security.Claims
@using Domain.Users
@using Infrastructure.Services
@using SETiAuth.Domain.Shared.Authentication
@using Webapp.Services.Authentication
@inject UserService UserService
@inject NavigationManager NavigationManager
@inject DialogService DialogService

<ProfileView @bind-UserProfile="@this._userProfile"
             OnSubmit="@this.Submit"/>

@code {
    private UserProfile _userProfile=new();
    [Parameter] public UserSessionDto? UserSession { get; set; }
    
    protected override Task OnParametersSetAsync() {
        if (this.UserSession != null) {
            this._userProfile._id = this.UserSession.UserAccount.Username;
            this._userProfile.Email = this.UserSession.UserAccount.Email;
            this._userProfile.FirstName = this.UserSession.UserAccount.FirstName;
            this._userProfile.LastName = this.UserSession.UserAccount.LastName;
            this._userProfile.Role = this.UserSession.UserAccount.Role;
        }
        return base.OnParametersSetAsync();
    }

    private async Task Submit() {
        await this.UserService.CreateProfile(this._userProfile);
        this.DialogService.Close();
    }
}