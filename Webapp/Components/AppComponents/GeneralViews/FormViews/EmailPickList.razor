@using Infrastructure.Services
@using SETiAuth.Domain.Shared.Authentication

<RadzenFieldset Text="Additional CC Emails" 
                Collapsed="@this.IsCollapsed" 
                CollapseTitle="Additional CC Emails" 
                AllowCollapse="true" Style="font-size: 22px !important;">
        <RadzenPickList @bind-Source="@Source"
                        @bind-Target="@Target"
                        Style="height:300px; width:100%;"
                        TItem="UserAccountDto"
                        TextProperty="@nameof(UserAccountDto.FirstName)"
                        AllowFiltering="true"
                        Multiple="true" 
                        ShowHeader="true" 
                        Disabled="false"
                        ButtonGap="10"
                        ButtonJustifyContent="JustifyContent.Center"
                        ButtonStyle="ButtonStyle.Info"
                        ButtonSize="ButtonSize.Medium"
                        ButtonVariant="Variant.Filled">
            <SourceHeader>
                <RadzenText Text="Users" TextStyle="TextStyle.H6"/>
            </SourceHeader>
            <TargetHeader>
                <RadzenText Text="Selected" TextStyle="TextStyle.H6"/>
            </TargetHeader>
            <Template>
                @($"{context.FirstName} {context.LastName} : {context.Email}")
                @*<RadzenText Text="@this.GetText(context)"/>*@
            </Template>
        </RadzenPickList>
</RadzenFieldset>

@code {
    [Parameter] public bool IsCollapsed { get; set; }
    [Parameter]
    public IEnumerable<UserAccountDto> Target {
        get=>this._target;
        set {
            if(this._target!=value) {
                this._target = value;

            }
        }
    }
    [Parameter] public EventCallback<IEnumerable<UserAccountDto>> TargetChanged { get; set; }
    private IEnumerable<UserAccountDto> _target;
    [Parameter]
    public IEnumerable<UserAccountDto> Source {
        get {
            return this._source;
        }
        set {
            if(this._source!=value) {
                this._source = value;
            }
        }
    }

    private IEnumerable<UserAccountDto> _source;
    
    private string GetText(UserAccountDto user) {
        return $"{user.FirstName} {user.LastName} : {user.Email}";
    }
}