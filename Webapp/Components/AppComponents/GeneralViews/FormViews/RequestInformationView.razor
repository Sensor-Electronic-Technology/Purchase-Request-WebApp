@using Webapp.Data
<RadzenCard class="step-card">
    <RadzenStack Gap="20">
        @if (this.Mode != EditMode.VIEW) {
            <RadzenCard class="area-header">
                <RadzenText TextStyle="TextStyle.H6" TextAlign="TextAlign.Center">
                    <RadzenIcon Icon="hub"/><b>Request Information</b>
                </RadzenText>
                <RadzenText Text="Enter Approver, Title, Reason, and Priority"
                            TextAlign="TextAlign.Center"
                            TextStyle="TextStyle.Subtitle1"/>
            </RadzenCard>
        }

        <RadzenRow>
            <RadzenColumn Size="5">
                <RadzenStack Orientation="Orientation.Vertical"
                             AlignItems="AlignItems.Center">
                    @if (this.Mode == EditMode.VIEW) {
                        <RadzenFormField Text="Approver" class="rz-p-2 rz-w-100" >
                            <RadzenTextBox Value="@this.SelectedApprover" />
                        </RadzenFormField>
                    } else {
                        <RadzenFieldset Text="Select Approver" >
                            <RadzenDropDown TValue="string"
                                            Data="@this.ApproverSelectList"
                                            Value="@this.SelectedApprover"
                                            ValueChanged="@SelectedApproverChanged"
                                            Placeholder="Select an approver"
                                            AllowClear="true"
                                            class="item-selector"/>
                        </RadzenFieldset>
                        <RadzenText TextStyle="TextStyle.H6"
                                    class="rz-color-danger-light"
                                    Text=" ** Only mark urgent if the request needs to be approved and ordered same day ** "/>
                    }
                    
                    @if (this.Mode == EditMode.VIEW) {
                        <RadzenFormField Text="Priority(Click)" class="rz-p-2 rz-w-100">
                            <RadzenToggleButton Text="@(this.IsUrgent ? "Urgent" : "Normal")"
                                                Icon="alarm_off"
                                                Value="@this.IsUrgent"
                                                ValueChanged="@this.IsUrgentChanged"
                                                ToggleIcon="alarm"
                                                ButtonStyle="ButtonStyle.Info"
                                                Shade="Shade.Light"
                                                ToggleShade="Shade.Dark"
                                                ToggleButtonStyle="ButtonStyle.Danger"
                                                Disabled="@(this.Mode == EditMode.VIEW)"
                                                Style=" height:80px; font-size: 22px !important;"/>
                        </RadzenFormField>
                    } else {
                        <RadzenFormField Text="Priority(Click)">
                            <RadzenToggleButton Text="@(this.IsUrgent ? "Urgent" : "Normal")"
                                                Icon="alarm_off"
                                                Value="@this.IsUrgent"
                                                ValueChanged="@this.IsUrgentChanged"
                                                ToggleIcon="alarm"
                                                ButtonStyle="ButtonStyle.Info"
                                                Shade="Shade.Light"
                                                ToggleShade="Shade.Dark"
                                                ToggleButtonStyle="ButtonStyle.Danger"
                                                Disabled="@(this.Mode == EditMode.VIEW)"
                                                Style=" width: 300px; height:80px; font-size: 22px !important;"/>
                        </RadzenFormField>
                    }
                    

                </RadzenStack>
            </RadzenColumn>
            <RadzenColumn Size="7">
                <RadzenFieldset Text="Title & Reason" Style="width: 100%">
                    <RadzenStack>
                        <RadzenFormField Text="Requester">
                            <RadzenTextBox Value="@this.Name"/>
                        </RadzenFormField>
                        <RadzenFormField Text="Purchase Request Title">
                            <RadzenTextBox Placeholder="Enter the title of the purchase request"
                                           Value="@this.Title"
                                           ValueChanged="@this.TitleChanged"
                                           ReadOnly="@(this.Mode == EditMode.VIEW)"/>
                        </RadzenFormField>
                        <RadzenFormField Text="Purchase Request Reason">
                            <RadzenTextArea Placeholder="Enter a brief description of the purchase request"
                                            Value="@this.Description"
                                            ValueChanged="@this.DescriptionChanged"
                                            ReadOnly="@(this.Mode == EditMode.VIEW)"
                                            Style="height: 150px;"/>
                        </RadzenFormField>
                    </RadzenStack>
                </RadzenFieldset>
            </RadzenColumn>
        </RadzenRow>
    </RadzenStack>
</RadzenCard>

@code {
    [Parameter] public string? Name { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? Description { get; set; }
    [Parameter] public string? SelectedApprover { get; set; }
    [Parameter] public List<string> ApproverSelectList { get; set; }
    [Parameter] public bool IsUrgent { get; set; }
    
    [Parameter] public EventCallback<string?> TitleChanged { get; set; }
    [Parameter] public EventCallback<string?> DescriptionChanged { get; set; }
    [Parameter] public EventCallback<string?> SelectedApproverChanged { get; set; }
    [Parameter] public EventCallback<bool> IsUrgentChanged { get; set; }
    
    [Parameter] public EditMode Mode { get; set; }
}