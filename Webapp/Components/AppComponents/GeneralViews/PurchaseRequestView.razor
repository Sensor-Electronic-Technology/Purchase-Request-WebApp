@using Domain.Authentication
@using Domain.PurchaseRequests.Model
@using Domain.PurchaseRequests.TypeConstants
@using Infrastructure.Services
@using MongoDB.Bson
@using Webapp.Data
@if (this.PurchaseRequest == null) {
    <p class="text-center">No purchase request selected</p>
} else {
    <RadzenCard>
        <RadzenTabs @bind-SelectedIndex="@this._parentTabIndex">
            <Tabs>
                <RadzenTabsItem Text="Info" class="rz-ripple tab-color-1">
                    <RadzenTabs RenderMode="TabRenderMode.Server"
                                @bind-SelectedIndex="@this._tabIndex">
                        <Tabs>
                            <RadzenTabsItem Text="Request Information" class="rz-ripple">
                                <RadzenCard class="info-area">
                                    <RadzenStack Gap="1">
                                        <RadzenCard Variant="Variant.Outlined" class="rz-border-radius-6 area-header">
                                            <RadzenText Text="@(this.PurchaseRequest.Title)"
                                                        TextStyle="TextStyle.H6"
                                                        TextAlign="TextAlign.Center"/>
                                        </RadzenCard>
                                        <RadzenAlert Title="@this.GetAlertText()"
                                                     AlertStyle="@this.GetAlertStyle()"
                                                     Size="AlertSize.Small"
                                                     AllowClose="false" Style="font-size: 14px !important;"/>
                                        @if (this.PurchaseRequest.Status == PrStatus.Rejected) {
                                            @if (this.PurchaseRequest.ApprovalResult != null) {
                                                <RadzenFieldset Text="Rejection Comments">
                                                    <RadzenText TextAlign="TextAlign.Center"
                                                                Text="@this.PurchaseRequest.ApprovalResult.Comments"
                                                                TextStyle="TextStyle.H6"
                                                                Style="width: 300px; height: fit-content;"/>
                                                </RadzenFieldset>
                                            }
                                        }
                                        @if (this.PurchaseRequest.Status == PrStatus.Delivered) {
                                            <RadzenTabs>
                                                <Tabs>
                                                    <RadzenTabsItem Text="Check-In Details">
                                                        <DeliveredView PurchaseRequest="@this.PurchaseRequest"/>
                                                    </RadzenTabsItem>
                                                    <RadzenTabsItem Text="Request Info.">
                                                        <RequestInformationView
                                                            Description="@this.PurchaseRequest.Description"
                                                            Name="@this.PurchaseRequest.Requester?.Name"
                                                            Title="@this.PurchaseRequest.Title"
                                                            IsUrgent="@this.PurchaseRequest.Urgent"
                                                            SelectedApprover="@this.PurchaseRequest.Approver.Name"
                                                            Mode="EditMode.VIEW"/>
                                                    </RadzenTabsItem>
                                                </Tabs>
                                            </RadzenTabs>
                                        } else {
                                            <RequestInformationView Description="@this.PurchaseRequest.Description"
                                                                    Name="@this.PurchaseRequest.Requester?.Name"
                                                                    Title="@this.PurchaseRequest.Title"
                                                                    IsUrgent="@this.PurchaseRequest.Urgent"
                                                                    SelectedApprover="@this.PurchaseRequest.Approver.Name"
                                                                    Mode="EditMode.VIEW"/>
                                        }
                                    </RadzenStack>
                                </RadzenCard>

                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Purchase Information" class="rz-ripple">
                                <RadzenCard class="info-area">
                                    <RadzenStack Orientation="Orientation.Vertical"
                                                 AlignItems="AlignItems.Center">
                                        <RadzenStack Orientation="Orientation.Horizontal">
                                            <RadzenFieldset Text="Department" Style="padding: 0 !important;">
                                                <RadzenText TextAlign="TextAlign.Center"
                                                            Text="@this.PurchaseRequest.Department?.Name"
                                                            TextStyle="TextStyle.Body1"
                                                            Style="width: 150px; height: fit-content;"/>
                                            </RadzenFieldset>
                                            <RadzenFieldset Text="Shipping" Style="padding: 0 !important;">
                                                <RadzenText TextAlign="TextAlign.Center"
                                                            Text="@this.PurchaseRequest.ShippingType"
                                                            TextStyle="TextStyle.Body1"
                                                            Style="width: 150px; height: fit-content;"/>
                                            </RadzenFieldset>
                                        </RadzenStack>
                                        <VendorView Vendor="@this.PurchaseRequest.Vendor"
                                                    Width="650px"
                                                    Mode="@EditMode.VIEW"/>
                                    </RadzenStack>
                                </RadzenCard>

                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Purchase Items" class="rz-ripple">
                                <PurchaseItemsTable @bind-PurchaseItems="@this.PurchaseRequest.PurchaseItems"
                                                    Mode="EditMode.VIEW"/>
                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Comments/Quotes" class="rz-ripple">
                                <CommentsQuotesView CurrentQuoteIds="@this.PurchaseRequest.Quotes"
                                                    AdditionalComments="@this.PurchaseRequest.AdditionalComments"
                                                    Mode="EditMode.VIEW"/>

                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </RadzenTabsItem>
                <RadzenTabsItem Text="Pdfs" class="tab-color-2 rz-ripple">
                    <RadzenTabs>
                        <Tabs>
                            <RadzenTabsItem Text="Purchase Request" class="rz-ripple tab-color-4">
                                <PrPdfPreview PurchaseRequestInput="@this.PurchaseRequest?.ToInput()"/>
                            </RadzenTabsItem>
                            <RadzenTabsItem Text="Purchase Order" class="rz-ripple tab-color-5"
                                            Visible="@(this.PurchaseRequest.Status >= PrStatus.Ordered && this.PurchaseRequest.Status != PrStatus.Rejected)">
                                <PoPdfPreview PurchaseOrderDto="@this.PurchaseRequest?.ToPurchaseOrderDto()"/>
                            </RadzenTabsItem>
                        </Tabs>
                    </RadzenTabs>
                </RadzenTabsItem>
            </Tabs>
        </RadzenTabs>
    </RadzenCard>
}

@code {
    [Inject] private PurchaseRequestService _purchaseRequestService { get; set; }
    [Parameter] public PurchaseRequest? PurchaseRequest { get; set; }
    [Parameter] public EventCallback<PurchaseRequest?> PurchaseRequestChanged { get; set; }
    [Parameter] public EditMode Mode { get; set; } = EditMode.VIEW;

    private List<Department> _departments = [];
    private string _columnWidth = "width: 100%";
    private ObjectId _prId = ObjectId.Empty;
    private int _tabIndex = 0;
    private int _parentTabIndex = 0;

    protected override async Task OnInitializedAsync() {
        await base.OnInitializedAsync();
        this._departments = await this._purchaseRequestService.GetDepartments();
    }

    protected override Task OnParametersSetAsync() {
        this._columnWidth = (this.Mode == EditMode.VIEW) ? "width: 100%" : "width: 50%";
        if (this.PurchaseRequest == null) {
            this._prId = ObjectId.Empty;
            this._tabIndex = 0;
            this._parentTabIndex = 0;
        } else {
            if (this.PurchaseRequest._id != this._prId) {
                this._tabIndex = 0;
                this._parentTabIndex = 0;
                this._prId = this.PurchaseRequest._id;
            }
        }
        return base.OnParametersSetAsync();
    }

    private string GetAlertText() {
        switch (this.PurchaseRequest?.Status) {
            case PrStatus.Approved: {
                return "Status: Approved, Pending Order";
            }
            case PrStatus.NeedsApproval: {
                return "Status: Pending Approval";
            }
            case PrStatus.Ordered: {
                return "Status: Ordered";
            }
            case PrStatus.Delivered: {
                return "Status: Delivered";
            }
            case PrStatus.Rejected: {
                return "Status: Rejected";
            }
            default: {
                return "Unknown";
            }
        }
    }

    private AlertStyle GetAlertStyle() {
        @if (this.PurchaseRequest != null) {
            switch (this.PurchaseRequest.Status) {
                case PrStatus.Approved: {
                    return AlertStyle.Info;
                }
                case PrStatus.NeedsApproval: {
                    return AlertStyle.Warning;
                }
                case PrStatus.Ordered: {
                    return AlertStyle.Secondary;
                }
                case PrStatus.Delivered: {
                    return AlertStyle.Success;
                }
                case PrStatus.Rejected: {
                    return AlertStyle.Danger;
                }
                default: {
                    return AlertStyle.Dark;
                }
            }
        } else {
            return AlertStyle.Dark;
        }
    }

}