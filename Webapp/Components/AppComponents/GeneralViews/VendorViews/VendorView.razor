@using Domain.PurchaseRequests.Model
@using Infrastructure.Services
@using Webapp.Data

@if (this.Vendor == null) {
    <RadzenText Text="No Vendor Selected" TextStyle="TextStyle.H5"/>
} else {
    <RadzenTemplateForm TItem="Vendor" Data="@this.Vendor" 
                        Style="@($"min-width:{this.Width};")"
                        Submit="@this.SaveHandler" 
                        InvalidSubmit="@this.InvalidSubmit">
        <RadzenFieldset Text="Vendor Info">
            <RadzenRow>
                <RadzenColumn Size="5">
                    <RadzenFieldset Text="Info">
                        <RadzenStack>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Name" Component="VendorName"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenTextBox Style="width: 100%;" 
                                                   Name="VendorName" 
                                                   @bind-Value="@this.Vendor.Name"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                    <RadzenRequiredValidator Component="VendorName" Text="Vendor name is required"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center" class="rz-text-wrap">
                                <RadzenColumn Size="12" SizeMD="4">
                                    <RadzenLabel Text="Contact/Website"  Component="VendorContact"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="8">
                                    <RadzenTextBox Style="width: 100%;" 
                                                   Name="VendorContact" 
                                                   @bind-Value="@this.Vendor.Attention"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Email" Component="VendorEmail"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenTextBox Style="width: 100%;"
                                                   @bind-Value="@this.Vendor.Email"
                                                   ReadOnly="@this.IsReadOnly()"
                                                   Name="VendorEmail"/>
                                    <RadzenEmailValidator 
                                        Component="VendorEmail" Text="Invalid email format" Popup="false"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Phone" Component="VendorPhone"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenMask Mask="(***) ***-**** x****" CharacterPattern="[0-9]"
                                                Placeholder="(000) 000-0000 x0000" Name="VendorPhone"
                                                @bind-Value="@this.Vendor.Phone"
                                                ReadOnly="@this.IsReadOnly()"
                                                Style="width: 100%;" aria-label="Phone"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Fax" Component="VendorFax"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenMask Mask="(***) ***-****" CharacterPattern="[0-9]"
                                                Placeholder="(000) 000-0000" Name="VendorFax"
                                                @bind-Value="@this.Vendor.Fax"
                                                ReadOnly="@this.IsReadOnly()"
                                                Style="width: 100%;" aria-label="Fax"/>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenFieldset>
                </RadzenColumn>
                <RadzenColumn Size="7">
                    <RadzenFieldset Text="Address">
                        <RadzenStack>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Country" Component="Country"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenTextBox @bind-Value="@this.Vendor.Country" 
                                                   AutoCompleteType="AutoCompleteType.Country"
                                                   Style="width: 100%"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="City" Component="City"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenTextBox @bind-Value="@this.Vendor.City"
                                                   Style="width: 100%"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Address" Component="Address"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenTextBox @bind-Value="@this.Vendor.StreetAddress" 
                                                   AutoCompleteType="AutoCompleteType.StreetAddress"
                                                   Style="width: 100%"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="5">
                                    <RadzenLabel Text="State / Province / Region" Component="State"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="7">
                                    <RadzenTextBox @bind-Value="@this.Vendor.State" 
                                                   AutoCompleteType="AutoCompleteType.State"
                                                   Style="width: 100%"
                                                   ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                            <RadzenRow AlignItems="AlignItems.Center">
                                <RadzenColumn Size="12" SizeMD="2">
                                    <RadzenLabel Text="Zip / Postal Code" Component="Zip"/>
                                </RadzenColumn>
                                <RadzenColumn Size="12" SizeMD="10">
                                    <RadzenMask @bind-Value="@this.Vendor.Zip"
                                                Mask="*****-****"
                                                Pattern="[0-9]"
                                                AutoCompleteType="AutoCompleteType.ZipCode"
                                                Style="width: 100%"
                                                ReadOnly="@this.IsReadOnly()"/>
                                </RadzenColumn>
                            </RadzenRow>
                        </RadzenStack>
                    </RadzenFieldset>
                </RadzenColumn>
            </RadzenRow>
            <RadzenFieldset Text="Save/Cancel" Visible="@(!this.IsReadOnly())">
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center">
                    <RadzenButton ButtonStyle="ButtonStyle.Primary"
                                  Text="Save"
                                  ButtonType="ButtonType.Submit"
                                  Disabled="@this.IsReadOnly()"
                                  Style="width: 150px;height: 50px;"/>
                    <RadzenButton ButtonStyle="ButtonStyle.Secondary"
                                  Text="Cancel"
                                  Click="@this.Cancel"
                                  Disabled="@this.IsReadOnly()"
                                  Style="width: 150px;height: 50px;"/>
                </RadzenStack>
            </RadzenFieldset>
        </RadzenFieldset>
    </RadzenTemplateForm>
    
}

@code {
    [Inject] private DialogService _dialogService { get; set; }
    [Inject] private NotificationService _notificationService { get; set; }
    [Inject] private ContactDataService _dataService { get; set; }
    [Parameter] public Vendor? Vendor { get; set; } = new();
    [Parameter] public string Width { get; set; } ="600px";
    /*[Parameter] public EventCallback<Vendor> VendorChanged { get; set; }*/
    [Parameter] public EventCallback<Vendor> VendorUpdated { get; set; }
    [Parameter] public EditMode Mode { get; set; }
    
    private bool _switchValue=false;
    private string _label="Enable";

    protected override Task OnParametersSetAsync() {
        if(this.Mode == EditMode.NEW) {
            this.Vendor = this.Vendor ?? new Vendor();
        }
        return base.OnParametersSetAsync();
    }

    private bool IsReadOnly() {
        return this.Mode == EditMode.VIEW;
    }

    private async Task SaveHandler() {
        if(this.Vendor == null) {
            return;
        }
        switch (this.Mode) {
            case EditMode.NEW:
                this.Vendor=await this._dataService.InsertOneV2(this.Vendor);
                break;
            case EditMode.EDIT:
                await this._dataService.Update(this.Vendor);
                break;
        }

        await this.VendorUpdated.InvokeAsync(this.Vendor);
        this._dialogService.Close();
    }

    private Task InvalidSubmit() {
        this._notificationService.Notify(NotificationSeverity.Error,"Input Error(s)","There are errors in the form, please correct them before submitting.");
        return Task.CompletedTask;
    }
    
    private Task Cancel() {
        this._dialogService.Close();
        return Task.CompletedTask;
    }
    
    void OnChange(bool? value, string name) {
        if (value.HasValue) {
            this._switchValue = value.Value;
            this._label = value.Value ? "Disable" : "Enable";
        }
    }
}